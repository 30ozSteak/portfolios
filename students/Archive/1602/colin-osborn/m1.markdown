# Colin Osborn - M1 Portfolio

## Individual

### Areas of Emphasis

Coming into the Module I felt good with general workflow on the computer and understanding of Git and GitHub from previous classes. However I was still lacking in overall understanding in Ruby fundamentals and syntax. I will admit I was a bit behind in the opening few weeks, so I really had to work hard to get to a point where I was understanding and catching up to the expected level. To do so I met with a mentor at least once a week, worked on extra work provided by Horace and also exercisms and nightly reading from Eloquent Ruby.

### End of Module Assessment
Assessed By: Horace

Challenge: Shopping List

### Notes

* Made some progress in the module -- especially on execution and delivery -- actually doing ok at accomplishing basic tasks, especially with some prompting or guidance
* However I still see some pretty deep struggles with some very fundamental concepts -- mostly around the process of translating textual code into a reasoned conceptual model of what's happening
* This manifests in some different ways -- confusion about basic syntax, confusion about object types, confusion about methods and classes
* Definitely would like to see you repeat module 1
* Next steps I'm recommending are to do some even more incremental "drills" on analyzing programs and source code
* Print out some samples (e.g. from Mythical Creatures) and go through them line by line with a pencil and label every piece of syntax and what it's doing
* What we want is to start developing a more fluid parsing process for turning code into ideas

#### 1. Ruby Syntax & API

* **1: Developer spends significant time debugging elementary syntax or concepts**

#### 2. Completion and Progress

* **1: Developer struggles to complete the baseline assignment.**

#### 3. Testing

* **2: Developer uses and writes tests to guide development, but implements more functionality than the tests cover**

#### 4. Workflow

* **3: Developer demonstrates comfort with their tools and makes some use of keyboard shortcuts**

#### 5. Collaboration

* **2: Developer asks detailed questions when progress slows or stops**

### 6. Enumerable & Collections

N/A

### Work

Here's the following work I have completed in this Module.

### Projects

#### Jungle Beats

* [GitHub URL](https://github.com/ColinOsborn/JungleBeats)
* [Original Assignment]()

Assessed By: Mike

Notes:

Non functional program.
Spent time pairing, there was not much code.
* Functional Expectations : 1
* Test-Driven Development : 2
* Encapsulation / Breaking Logic into Components : 3
* Fundamental Ruby & Style : 3
* Looping or Recursion : 1

#### Enigma

* [GitHub URL](https://github.com/ColinOsborn/Enigma)
* [Original Assignment]()

Assessed By: Tess

Notes: Definitely struggled on the project. Didn't have much done.

The project will be assessed with the following rubric:

* Overall Functionality : 1
* Fundamental Ruby & Style : 2
* Test-Driven Development : 1
* Breaking Logic into Components : 2

## Team Projects
#### Hyde

Project Partner: Christopher Soden

* [GitHub URL](https://github.com/ColinOsborn/hyde)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/hyde/index.markdown)

A Jekyll copy that will translate your markdown into HTML format so that building a blog becomes a breeze. It allow's you to customize your template and keeps everything organized in separate folders so nothing overlaps.

(evaluation comments)

* Overall Functionality : 2
* Test Driven-Development : 3
* Encapsulation / Breaking into logical : 3
* Fundamental Ruby & Style : 3
* Enumerable and Collections : 3
* Code Sanitization : 3

* Christopher Soden - One thing that went very well: We had a great team dynamic where both people were able to be heard and contribute. We both looked for ways to help the other and make space for the other person to make contributions.
-Something the team could do better: We need more organization and structure. We need to be clear on what iterations we are going to have done by what day. We also need to schedule specific work times rather than organizing 'on the fly'.
-What stands between 'now' and 'could be': just practice. More familiarity with the tools.

## Team Projects
#### Black_Thursday

Project Partner: Jonathan Liss

* [GitHub URL](https://github.com/ColinOsborn/hyde)
* [Original Assignment](https://github.com/turingschool/curriculum/blob/master/source/projects/hyde/index.markdown)
* [waffle.io](https://waffle.io/jdliss/black_thursday)

###### Project DTR Notes

  * We decided to mostly work together throughout the whole project. Both of us had found better success working on things at the same time than divide and conquer.
  * Both of us were really open to feedback, we figured it would do nothing but help both of us, so communication was pretty easy and never a barrier.
  * Scheduling wasn't an issue, we both were open and free and just worked together after class every day.
  * Both of us were really upfront abut our strengths and limitations, and with that honesty we moved forward, and actually never really became an issue.
  * All in all we seemed to be in agreement with most things so the DTR session was relatively short.

(evaluation comments)

Assessed By: Mike

Repo: http://github.com/jdliss/black_thursday

Notes:

98.93 percent coverate
114 tests
finished in .69 seconds
Some opportunities to pull thing sout into separate methods to help with complexity, SRP and readability.
Used memo-ization

* Overall Functionality : 3
* Test Driven-Development : 3
* Encapsulation / Breaking into logical : 3
* Fundamental Ruby & Style : 4
* Enumerable and Collections : 3
* Code Sanitization : 4

Pull request/merger : https://github.com/jdliss/black_thursday/pull/17
Pull request/merger #2: https://github.com/jdliss/black_thursday/pull/24

## Community

### Giving Feedback

* Mark Miranda - Mark is very knowledgable of Ruby and has a great logical way of tackling problems. Since most of what we did was him help guiding me through problems, I sadly can't give any feedback of what he can work on. But once again, he was super easy to work with. Communication was great, he great at giving me feedback so that was also helpful.

* Josh Washke - Josh is extremely knowledgable and can explain some difficult parts of code or concepts that really helps for someone who is still really new to all of it. Much like myself, Josh seems to go with flow pretty easily, which is awesome, but may also mean a slight lack of leadership?
Working with Josh was great, I honestly can't think of anything he could do to make him better since we only worked together for such a short period of time. Thanks Josh!

* Matt DesMarteau - It was great working with Matt. His extra experience was much appreciated and made the project a lot easier.
Since we only worked together briefly, it's hard to say what the Team or Matt could do better specifically. It was a pleasure working with him and gaining more insight into how projects operate.

### Being a Community Member

* Mark Miranda - Colin has a great attitude towards learning and acknowledging where he needs more help. He makes a conscious attempt to understand the thought process and that goes into decision making. I think a little bit more focus on breaking problems into smaller pieces to be able to apply tools we've learned about would help understanding how to use them.

* Matt DesMarteau - Colin and I teamed up on a class exercise early in the module.  I enjoyed collaborating with Colin on classwork because I could tell he really wants to be a master at his trade.  This is my second time taking module 1 and Colin really appreciated any tips or techniques I had already learned.  He is very open to new ideas and knows what questions to ask to find out a better solution to the problem.  I know first hand how much you have to learn in such a short period of time to be successful in the program.  I could tell that Colin realized quickly he needed to put in extra time if he wanted to succeed and I saw throughout the module his determination and extra time spent to learn hard concepts.  Colin is great to work with and would be great on any team or in any company.  I know that with time Colin will be a great programmer because he already has the skills necessary to be a collaborator.


### Posse Challenges

##### Code Breakers
https://github.com/ToniRib/posse_challenges/tree/master/codebreakers

I liked this challenge and would also like to eventually revisit this challenge in the future.

##### People Database
https://github.com/ToniRib/posse_challenges/tree/master/people_database

This one was cool because I was able to help a bit more and contributed towards a solution with Nick.

##### College Scorecard
https://github.com/ToniRib/posse_challenges/tree/master/college_scorecard

I didn't have too much involvement in this one since it was the first week of being here and I was still adjusting to being here. It was a cool intro though to the Posse everyone involved.

##### Turing Tower
https://github.com/ToniRib/posse_challenges/tree/master/turing_tower_transfer_puzzle

This is one that I'd definitely like to revisit when my skills are more proficient.

##### Enums and Procs
https://github.com/ToniRib/posse_challenges/tree/master/enumerables_and_procs

Mostly just sat back and took in info for this one.

##### BlogPost
https://gist.github.com/ColinOsborn/17dcaa585dfecd4dc3af

### Playing a Part

Sadly, I wasn't too great of a community member for this first module, especially in the beginning. But as time has go on, I've connected with a lot more students and want to start a mountain bike ride option for the weekends, where hopefully we can also attract some beginners and I can show them the basics and get people able to tackle the trails. I also want to get more involved in other social outings and possibly more clubs too.

## Review

## A: End-of-Module Assessment

A Turing student is able to demonstrate proficiency at programming in accordance
with the module's content and expectations.


* 1: Student earned two or more scores below "3" on the assessment

## B: Individual Work & Projects

A Turing student works to maximize their skill growth and demonstrates
that skill across a variety of work.

* 2: Student demonstrates some lack of engagement or growth in their individual
skill or project outcomes without a clear upward trend.

## C: Group Work & Projects

A Turing student contributes significantly to group projects, helps the team
develop their technical skills, and delivers a high-quality product.

* 3: Student fully participates in their group work to facilitate group harmony
while achieving consistently satisfactory results.

## D: Community Participation

A Turing student builds up the community around them by participating and
supporting other students, the larger Turing family, and persons outside our
walls who want to develop their own skills.


* 3: Student participates in required activities and does at least one or two
above-and-beyond supports of the community.

## E: Peer & Instructor Feedback

A Turing student accelerates the growth of those around
them by delivering specific, kind, and actionable feedback. They accelerate their
own growth by taking in and acting on the feedback of their peers and instructors.

* 3: Student consistently delivers meaningful feedback for peers and implements
strategies to improve themselves in response to feedback.

OUTCOME: RETAINED
